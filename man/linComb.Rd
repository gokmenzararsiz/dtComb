% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linComb.R
\name{linComb}
\alias{linComb}
\title{Combine two diagnostic tests with several linear combination methods.}
\usage{
linComb(
  markers = NULL,
  status = NULL,
  event = NULL,
  method = c("scoring", "SL", "logistic", "minmax", "PT", "PCL", "minimax", "TS"),
  resample = c("none", "cv", "repeatedcv", "boot"),
  nfolds = 5,
  nrepeats = 3,
  niters = 10,
  standardize = c("none", "range", "zScore", "tScore", "mean", "deviance"),
  ndigits = 0,
  show.plot = TRUE,
  direction = c("auto", "<", ">"),
  conf.level = 0.95,
  cutoff.method = c("youden", "roc01"),
  ...
)
}
\arguments{
\item{markers}{a \code{numeric} a numeric data frame that includes two diagnostic tests
results}

\item{status}{a \code{factor} vector that includes the actual disease
status of the patients}

\item{event}{a \code{character} string that indicates the event in the status
to be considered as positive event}

\item{method}{a \code{character} string specifying the method used for
combining the markers. The available methods are:
\itemize{
\item \code{scoring}: Combination score obtained using the estimated
beta/regression coefficients values of the relevant logistic regression model
\item \code{SL}: Su and Liu combination score obtained by using Fisher's
discriminant function under the assumption of multivariate normal
distribution model and proportionate covariance matrices
\item \code{logistic}: Combination score obtained by fitting a logistic
regression model
\item \code{minmax}: Linearly combines the minimum and maximum values of
the markers
\item \code{PT}: Pepe and Thompson combination score obtained by
proportioning the slope values the relevant logistic regression model
\item \code{PCL}: Pepe, Cai and Langton combination score obtained by using
AUC as the parameter of a logistic regression model
\item \code{minimax}: Combination score obtained with the Minimax procedure
\item \code{TS}: Combination score obtained by using the trigonometric
functions of the theta value that optimizes the AUC
}
\bold{IMPORTANT}: See Details for further information.}

\item{resample}{a \code{character} string indicating the name of the
resampling options. Bootstrapping Cross validation and repeated cross
validation are given as the options for resampling along with the number
of folds and number of repeats.
\itemize{
\item \code{boot}: Bootstrapping is performed in a similar way; the dataset
is divided into folds with replacement and models are trained and tested
in these folds to determine the best parameters for the given method and
dataset.
\item \code{cv}: Cross-validation resampling, the dataset is divided into
the number of folds given without replacement, in each iteration one fold
is selected as the test set, the model is built using the remaining folds
and tested on the test set. The corresponding AUC values are kept in a list
as well as the parameters used for the combination. The best performed model
is selected and the combination score returned for the whole dataset.
\item \code{repeatedcv}: repeated cross-validation the process is repeated
and the best performed models selected at each step is stored in another
list, the best performed among these models is selected to be applied to
the entire dataset.
}}

\item{nfolds}{a \code{numeric} value that indicates the number of folds for
cross validation based resampling methods  (5, default)}

\item{nrepeats}{a \code{numeric} value that indicates the number of repeats
for "repeatedcv" option of resampling methods (3, default)}

\item{niters}{a \code{numeric} value that indicates the number of
bootstrapped resampling iterations (10, default)}

\item{standardize}{a \code{character} string indicating the name of the
standardization method. The default option is no standardization applied.
Available options are:
\itemize{
\item \code{range}: Standardization to a range between 0 and 1
\item \code{zScore}: Standardization using z scores with mean = 0
and standard deviation = 1
\item \code{tScore}: Standardization using T scores. The range varies between
usually 20 and 80
\item \code{mean}: Standardization with sample mean = 1
\item \code{deviance}: Standardization with sample standard deviation = 1
}}

\item{ndigits}{a \code{integer} value to indicate the number of decimal
places to be used for rounding in Scoring method (0, default)}

\item{show.plot}{a \code{logical} a \code{logical}. If TRUE, a ROC curve is
plotted. Default is TRUE}

\item{direction}{a \code{character} string determines in which direction the
comparison will be made.  “>”: if the predictor values for the control group
are higher than the values of the case group (controls > cases).
“<”: if the predictor values for the control group are lower or equal than
the values of the case group (controls < cases).}

\item{conf.level}{a \code{numeric} values determines the confidence interval
for the roc curve(0.95, default).}

\item{cutoff.method}{a \code{character} string determines the cutoff method
for the roc curve.}

\item{\dots}{further arguments. Currently has no effect on the results.}

\item{init.param}{a \code{numeric} initial value to be used for optimization
in minmax, PCL, minimax and TS methods}
}
\value{
A list of \code{numeric} linear combination scores calculated
according to the given method and standardization option
}
\description{
The \code{linComb} function calculates the combination
scores of two diagnostic tests selected among several linear combination
methods and standardization options
}
\examples{
#call data
data(exampleData1)

#define the function parameters
markers <- exampleData1[, -1]
status <- factor(exampleData1$group, levels = c("not_needed", "needed"))
event <- "needed"

score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = TRUE,
standardize = "none", direction = "<", cutoff.method = "youden")

score2 <- linComb(markers = markers, status = status, event = event,
method = "TS", resample = "boot", standardize = "range", direction = "<",
cutoff.method = "youden")

score3 <- linComb(markers = markers, status = status, event = event,
method = "PT", resample = "none", direction = "<",
cutoff.method = "youden")

}
\author{
Serra Ilayda Yerlitas, Serra Bersan Gengec
}
