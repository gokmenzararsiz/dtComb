install.packages("papaja")
install.packages("knitr")
install.packages("knitr")
install.packages("BioStyle")
library(BiocStyle)
remove.packages("MLSeq", lib="C:/Program Files/R/R-4.2.0/library")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("MLSeq")
BiocManager::install("MLSeq")
install.packages("Bioconductor")
BiocManager::install("MLSeq")
BiocManager::install(version = '3.15')
devtools::load_all()
data(exampleData1)
#define the function parameters
markers <- exampleData1[, -1]
status <- factor(exampleData1$group, levels = c("not_needed", "needed"))
event <- "needed"
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = TRUE,
standardize = "none", direction = "<", cutoff.method = "youden")
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = FALSE,
standardize = "none", direction = "<", cutoff.method = "youden")
roc.m1 <- suppressMessages(pROC::roc(status ~ markers[, 1], plot = show.plot, print.auc = TRUE,
direction = direction, col = "#619CFF", lwd = 4, legacy.axes = TRUE,
percent = FALSE, main = "ROC Curves for Combined Diagnostic Test"))
direction = "<"
roc.m1 <- suppressMessages(pROC::roc(status ~ markers[, 1], plot = show.plot, print.auc = TRUE,
direction = direction, col = "#619CFF", lwd = 4, legacy.axes = TRUE,
percent = FALSE, main = "ROC Curves for Combined Diagnostic Test"))
show.plot = TRUE
roc.m1 <- suppressMessages(pROC::roc(status ~ markers[, 1], plot = show.plot, print.auc = TRUE,
direction = direction, col = "#619CFF", lwd = 4, legacy.axes = TRUE,
percent = FALSE, main = "ROC Curves for Combined Diagnostic Test"))
roc.m2 <- suppressMessages(pROC::roc(status ~ markers[, 2], plot = show.plot, print.auc = TRUE,
direction = direction, print.auc.y = 0.40, col = "#00BA38", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
roc.c <- suppressMessages(pROC::roc(status ~ as.numeric(comb.score), plot = show.plot, print.auc = TRUE,
direction = direction, print.auc.y = 0.30, col = "#F8766D", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
score1$CombScore-> comb.score
roc.c <- suppressMessages(pROC::roc(status ~ as.numeric(comb.score), plot = show.plot, print.auc = TRUE,
direction = direction, print.auc.y = 0.30, col = "#F8766D", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
legend("bottomright", legend = c(colnames(markers)[1], colnames(markers)[2],
"Combined Score"), col = c("#619CFF","#00BA38","#F8766D"), lwd = 4)
roc.c
roc.m1 <- suppressMessages(pROC::roc(status ~ markers[, 1], plot = show.plot, print.auc = TRUE,
direction = direction, col = "#619CFF", lwd = 4, legacy.axes = TRUE,
percent = FALSE, main = "ROC Curves for Combined Diagnostic Test"))
roc.m2 <- suppressMessages(pROC::roc(status ~ markers[, 2], plot = show.plot, print.auc = TRUE,
direction = direction, print.auc.y = 0.40, col = "#00BA38", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
roc.c <- suppressMessages(pROC::roc(status ~ as.numeric(comb.score), plot = show.plot, print.auc = TRUE,
direction = direction, print.auc.y = 0.30, col = "#F8766D", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
legend("bottomright", legend = c(colnames(markers)[1], colnames(markers)[2],
"Combined Score"), col = c("#619CFF","#00BA38","#F8766D"), lwd = 4)
ROCplot <- legend("bottomright", legend = c(colnames(markers)[1], colnames(markers)[2],
"Combined Score"), col = c("#619CFF","#00BA38","#F8766D"), lwd = 4)
ROCplot
ROCplot
print(ROCplot)
print(ROCplot)
devtools::load_all()
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = FALSE,
standardize = "none", direction = "<", cutoff.method = "youden")
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = TRUE,
standardize = "none", direction = "<", cutoff.method = "youden")
devtools::load_all()
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = TRUE,
standardize = "none", direction = "<", cutoff.method = "youden")
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = FALSE,
standardize = "none", direction = "<", cutoff.method = "youden")
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = FALSE,
standardize = "none", direction = "<", cutoff.method = "youden")
roc.m1 <- suppressMessages(pROC::roc(status ~ markers[, 1], plot = FALSE, print.auc = TRUE,
direction = direction, col = "#619CFF", lwd = 4, legacy.axes = TRUE,
percent = FALSE, main = "ROC Curves for Combined Diagnostic Test"))
roc.m1 <- suppressMessages(pROC::roc(status ~ markers[, 1], plot = FALSE, print.auc = TRUE,
direction = direction, col = "#619CFF", lwd = 4, legacy.axes = TRUE,
percent = FALSE, main = "ROC Curves for Combined Diagnostic Test"))
roc.m2 <- suppressMessages(pROC::roc(status ~ markers[, 2], plot = FALSE, print.auc = TRUE,
direction = direction, print.auc.y = 0.40, col = "#00BA38", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
roc.c <- suppressMessages(pROC::roc(status ~ as.numeric(comb.score), plot = FALSE, print.auc = TRUE,
direction = direction, print.auc.y = 0.30, col = "#F8766D", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
legend("bottomright", legend = c(colnames(markers)[1], colnames(markers)[2],
"Combined Score"), col = c("#619CFF","#00BA38","#F8766D"), lwd = 4)
roc.m1 <- suppressMessages(pROC::roc(status ~ markers[, 1], plot = FALSE, print.auc = TRUE,
direction = direction, col = "#619CFF", lwd = 4, legacy.axes = TRUE,
percent = FALSE, main = "ROC Curves for Combined Diagnostic Test"))
roc.m2 <- suppressMessages(pROC::roc(status ~ markers[, 2], plot = FALSE, print.auc = TRUE,
direction = direction, print.auc.y = 0.40, col = "#00BA38", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
roc.c <- suppressMessages(pROC::roc(status ~ as.numeric(comb.score), plot = FALSE, print.auc = TRUE,
direction = direction, print.auc.y = 0.30, col = "#F8766D", lwd = 4,
legacy.axes = TRUE, percent = FALSE, add = TRUE,
main = "ROC Curves for Combined Diagnostic Test"))
if(show.plot = TRUE){
legend("bottomright", legend = c(colnames(markers)[1], colnames(markers)[2],
"Combined Score"), col = c("#619CFF","#00BA38","#F8766D"), lwd = 4)
}
if(show.plot == TRUE){
legend("bottomright", legend = c(colnames(markers)[1], colnames(markers)[2],
"Combined Score"), col = c("#619CFF","#00BA38","#F8766D"), lwd = 4)
}
show.plot == TRUE
show.plot = TRUE
if(show.plot == TRUE){
legend("bottomright", legend = c(colnames(markers)[1], colnames(markers)[2],
"Combined Score"), col = c("#619CFF","#00BA38","#F8766D"), lwd = 4)
}
devtools::load_all()
data(exampleData1)
#define the function parameters
markers <- exampleData1[, -1]
status <- factor(exampleData1$group, levels = c("not_needed", "needed"))
event <- "needed"
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = FALSE,
standardize = "none", direction = "<", cutoff.method = "youden")
score1 <- linComb(markers = markers, status = status, event = "needed",
method = "minimax", resample = "none", show.plot = TRUE,
standardize = "none", direction = "<", cutoff.method = "youden")
